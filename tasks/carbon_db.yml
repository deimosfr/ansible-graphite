---

# Graphite db init
- name: inspect graphite db
  shell: export PYTHONPATH=/opt/graphite/webapp/; /opt/graphite/bin/python /opt/graphite/bin/django-admin.py inspectdb --settings=graphite.settings
  register: graphite_inspect
  changed_when: False
  become: true
  become_user: _graphite

- name: check for secret key warning
  command: echo SECRET_KEY is set to an unsafe default.
  failed_when: "'SECRET_KEY' in graphite_inspect.stderr"
  changed_when: False

- name: check if superuser and db have already been deployed
  stat: path="{{ graphite_install_dir }}/.superuser_created"
  register: superuser_created 

- name: create sql schema
  shell: export PYTHONPATH=/opt/graphite/webapp/; /opt/graphite/bin/python /opt/graphite/bin/django-admin.py makemigrations --noinput --settings=graphite.settings
  become: true
  become_user: _graphite  
  when: superuser_created.stat.exists == False

- name: create sql schema
  shell: export PYTHONPATH=/opt/graphite/webapp/; /opt/graphite/bin/python /opt/graphite/bin/django-admin.py migrate --run-syncdb --noinput --settings=graphite.settings
  become: true
  become_user: _graphite  
  when: superuser_created.stat.exists == False

- name: create superuser account
  shell: export PYTHONPATH=/opt/graphite/webapp/; /opt/graphite/bin/python /opt/graphite/bin/django-admin.py createsuperuser --username={{ graphite_admin_username }} --email={{ graphite_admin_email }} --noinput --settings=graphite.settings
  become: true
  become_user: _graphite
  when: superuser_created.stat.exists == False

- name: create lock file
  file: path="{{ graphite_install_dir }}/.superuser_created" state=touch
  when: superuser_created.stat.exists == False

- meta: flush_handlers
